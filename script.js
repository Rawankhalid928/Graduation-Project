const theoryQuestions = [
    {
        question: "ูุฑุจุท ุฌุฏูููู ูุงุณุชุฑุฌุงุน ุงูููู ูููุง ูุณุชุฎุฏู ุงููููุฉ ุงูุฑุฆูุณูุฉ",
        options: ["Group By", "Order By", "Where", "Join"],
        correct: 3,
        explanation: "  ุชูุณุชุฎุฏู ูุฏูุฌ ุตููู ูู ุฌุฏูููู ุฃู ุฃูุซุฑ ุจูุงุกู ุนูู ุนููุฏ ูุดุชุฑู ุจููููุง JOIN"
    },
    {
        question: "ุฃุฏุงุฉ ุชููู ุงููุณุชุฎุฏู ูู ุนุฑุถ ูุฌููุนุฉ ุนูุงุตุฑ ุนูู ุดูู ูุงุฆูุฉ ",
        options: ["ListBox", "CheckBox", "Label", "TextBox"],
        correct: 0,
        explanation:  "ูู ุนูุตุฑ ุชุญูู ูู ูุงุฌูุงุช ุงููุณุชุฎุฏู ุงูุชู ุชุณูุญ ูููุณุชุฎุฏู ุจุนุฑุถ ูุงุฆูุฉ ูู ุงูุนูุงุตุฑ ListBox  "
    },
     {
        question:"ูุงูู ุงูุฏุงูุฉ ุงูุชู ุชุณุชุฎุฏู ูุงูุฌุงุฏ ุงุนูู ูููุฉ ูู ุนููุฏ ูู ุฌุฏูู ูุงุนุฏุฉ ุจูุงูุงุช ุงูุฑุงูู",
        options: [" AVG", "MAX ", "SUM", "MIN"],
        correct: 1,
        explanation:" ุชุนูู ุงุนูู ูููุฉ MAX"
    },
    {
     question:"ูุงูู ุงููููุฉ ุงููุญุฌูุฒุฉ ุงูุชู ูุชู ุงุณุชุฎุฏุงููุง ูุชูุซูู ุงูููู ุงููุงุฑุบุฉ ูู ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช"  ,
     options:["Empty","select","form","where"],
     correct:0 ,
      explanation:" ุชุนูู ุงู ุงููููุฉ ูุงุฑุบุฉ Empty"
    },
     {
     question:"ุชุนุฏ ุงูุนูุงูุฉ ุจูู ุงููุชุฏุฑุจ ูุฑูู ุงูุณุฌู ุงููุฏูู ูู ููุน "  ,
     options:["ูุงุญุฏ ููุชุนุฏุฏ","ุนูุงูุฉ ุซูุงุฆูุฉ","ูุชุนุฏุฏ ููุชุนุฏุฏ","ูุงุญุฏ ููุงุญุฏ"],
     correct:3 ,
      explanation:"ููู ูุชุฏุฑุจ ุฑูู ุณุฌู ูุฏูู ูุฑูุฏ ูุงูุนูุณ ุตุญูุญ"
    },
    {
     question:"ุงูููุชุงุญ ุงูุงุฌูุจู ูู ุตูุฉ ุชุดูุฑ ุงูู ููุชุงุญ ุฑุฆูุณ ูู ุฌุฏูู ุงุฎุฑุ"  ,
     options:["ุตุญ","ุฎุทุฃ"],
     correct:0 ,
      explanation:"ุงูุบุฑุถ ููู ุงูุดุงุก ุนูุงูุฉ"
    },
    {
     question:" Truo or false ูู ุงููุงุน ุงูุจูุงูุงุช ุงูุชู ุชุนุจุฑ ุนู ุงููููุฉ ุงูููุทููุฉ "  ,
     options:["Float","Double","int","Boolean"],
     correct:3 ,
      explanation:"ูู ููุน ุจูุงูุงุช ูุณุชุฎุฏู ูุชูุซูู ูููุชูู ููุท ุงูุง ุตุญูุญ ุงู ุฎุงุทุฆ"
    },
     {
     question:" index=0 ุฃูู ุนูุตุฑ ูู ุงููุตูููุฉ ูููู "  ,
     options:["ุตุญ","ุฎุทุฃ"],
     correct:0 ,
      explanation:"ุงูุนูุตุฑ ุงูุงูู ูู ุงูุตูููุฉ ูููู 0"
    },
    {
     question: " PHP ุงูุทุฑููุฉ ุงูุณูููุฉ ูุงููุงุก ุณุทุฑ ุงูุงูุงูุฑ ูู ูุบุฉ ุงูุจุฑูุฌุฉ ",
     options: [";","/","<","{"],
     correct:0,
     explanation:" ; ูุงูููู ุงุณุชุฎุฏุงู ุงู ุฑูุฒ ุงุฎุฑ ุบูุฑ "
    },
      {
     question: "ูุบุฉ ุจุฑูุฌูุฉ ููุณุฑุฉ ุชุณุชุฎุฏู ูู ุชุทุจููุงุช ุงูููุจ ูุงูุนูู ุนูู ุฌุงูุจ ุงูุฎุงุฏู ูููุณ ุนูู ุฌุงูุจ ุงููุณุชุฎุฏู ุงู ูู ุฎุงุตุฉ ุจุงูููุงูุน ุงูุฏููุงููููุฉ PHP",
     options: ["ุฎุทุฃ","ุตุญ"],
     correct:1,
     explanation:"ูุนู ูู ูุบุฉ ุจุฑูุฌูุฉ ุชููุฐ ุนูู ุฌุงูุจ ุงูุฎุงุฏู ููุท"
    },
     {
     question: "ููุชุงุจุฉ ุนููุงู ูุดูู ุฃุฑูุงู ููุตูุต ูุนุฑู ุงููุชุบูุฑ ูู ููุน",
     options: ["Double","String","Long","Boolean"],
     correct:1,
     explanation:" ูููู ุงุณุชุฎุฏุงูู ูุชุฎุฒูู ูุตูุต ูุซู ูุนูุงููู ุงูุชู ูุฏ ุชุญุชูู ุนูู ุงุฑูุงู ููุตูุต ูุฎุชููุฉstring"
    }
];

const practicalQuestions = [
    {
        question: "ูุง ูู ุงูุทุฑููุฉ ุงูุตุญูุญุฉ ูุงุณุชุฎุฏุงู ุงูุฃูุฑ ูู ุจูุฆุฉ ููููุณุ",
        options: ["ุฅุฏุฎุงู ุงูุฃูุฑ ูุจุงุดุฑุฉ", "ุงุณุชุฎุฏุงู sudo", "ุฅุถุงูุฉ ูุณุงุฑ ุตุญูุญ", "ูุฑุงุฌุนุฉ ุงูุฅุตุฏุงุฑุงุช"],
        correct: 1,
        explanation: "ุงูุฃูุฑ ูุฌุจ ุฃู ููููุฐ ุจุงุณุชุฎุฏุงู ุตูุงุญูุงุช ุงูู sudo ูู ุจูุฆุฉ ููููุณ."
    },
    {
        question: "ููู ุชููู ุจุฅูุดุงุก ููู ูู Pythonุ",
        options: ["open('filename')", "create('filename')", "touch('filename')", "open('filename', 'w')"],
        correct: 3,
        explanation: "ููููู ุฅูุดุงุก ููู ุจุงุณุชุฎุฏุงู open ูุน ูุถุน 'w' ููุชุงุจุฉ ูุญุชูู ุงูููู."
    }
];

let current = 0;
let userAnswers = [];
let currentQuestions = []; // ูุชุญุฏูุฏ ุงูุฃุณุฆูุฉ ุจูุงุกู ุนูู ุงูููุน

// ุชุญุฏูุฏ ููุน ุงูุฃุณุฆูุฉ ุนูุฏ ุชุญููู ุงูุตูุญุฉ
const urlParams = new URLSearchParams(window.location.search);
const type = urlParams.get('type'); // ุฌูุจ ููุน ุงูุฃุณุฆูุฉ (ูุธุฑูุฉ ุฃู ุนูููุฉ)

if (type === 'theory') {
    currentQuestions = theoryQuestions; // ุงูุฃุณุฆูุฉ ุงููุธุฑูุฉ
} else if (type === 'practical') {
    currentQuestions = practicalQuestions; // ุงูุฃุณุฆูุฉ ุงูุนูููุฉ
}

function loadQuestion(index) {
    const q = currentQuestions[index];
    const questionBox = document.getElementById("question-box");
    questionBox.innerHTML = `
        <h3 id="question-number">ุงูุณุคุงู ${index + 1} ูู ${currentQuestions.length}</h3>
<h2 id="question-text">${q.question}</h2>

        <div class="options" id="options"></div>
        <div class="explanation" id="explanation"></div>
        <button class="next-button" id="next-button" style="display:none;">ุงูุณุคุงู ุงูุชุงูู</button>
    `;

    const optionsDiv = document.getElementById("options");

    q.options.forEach((opt, i) => {
        const div = document.createElement("div");
        div.className = "option";
        div.innerText = opt;
        div.onclick = () => selectAnswer(i, q.correct, q.explanation, div);
        optionsDiv.appendChild(div);
    });

    document.getElementById("next-button").onclick = loadNextQuestion;
}

function selectAnswer(selected, correct, explanation, selectedDiv) {
    const optionDivs = document.querySelectorAll(".option");
    optionDivs.forEach((div, index) => {
        div.onclick = null;
        if (index === correct) {
            div.classList.add("correct");
        } else if (index === selected) {
            div.classList.add("wrong");
        }
    });

    userAnswers.push({
        question: currentQuestions[current].question,
        selected: selected,
        correct: correct,
        explanation: currentQuestions[current].explanation,
        options: currentQuestions[current].options
    });

    document.getElementById("explanation").innerText = explanation;
    document.getElementById("next-button").style.display = "inline-block";
}

function loadNextQuestion() {
    current++;
    if (current < currentQuestions.length) {
        loadQuestion(current);
    } else {
        showReport();
    }
}

function showReport() {
    const questionBox = document.getElementById("question-box");
    questionBox.innerHTML = "<h2>ูุชูุฌุฉ ุงูุงุฎุชุจุงุฑ:</h2>";

    userAnswers.forEach((answer, index) => {
        const isCorrect = answer.selected === answer.correct;

        const div = document.createElement("div");
        div.className = "question-box";
        div.style.backgroundColor = "#f1f5f9";
        div.style.marginBottom = "15px";
        div.style.padding = "10px";
        div.style.borderRadius = "10px";

        div.innerHTML = `
            <h3>ุณุคุงู ${index + 1}: ${answer.question}</h3>
            <p>โ ุฅุฌุงุจุชู: <strong style="color: ${isCorrect ? '#22c55e' : '#ef4444'}">
            ${answer.options[answer.selected] || 'ูู ุชูุฌุจ'}</strong></p>
            <p>๐ฏ ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ: <strong>${answer.options[answer.correct]}</strong></p>
            <p><em>${answer.explanation}</em></p>
        `;

        questionBox.appendChild(div);
    });
}

window.onload = () => {
    loadQuestion(current);
};
